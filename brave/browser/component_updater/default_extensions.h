// Copyright 2016 Brave authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef BRAVE_BROWSER_COMPONENT_UPDATER_DEFAULT_EXTENSIONS_H_
#define BRAVE_BROWSER_COMPONENT_UPDATER_DEFAULT_EXTENSIONS_H_

#include <string>

// The SHA256 of the SubjectPublicKeyInfo used to sign the extension.
// PublicKeySHA256 can be generated by first downloading the CRX with
// one of the URLs below.  Then using:
// ./script/get-extension-public-key-sha256.py <crx_path>

// Registers a component which either already exists or not for updates
// require('electron').remote.componentUpdater.registerComponent(extensionId) // NOLINT
//
// Removes any existing extension and performs an install now.
// componentUpdater.registerComponent must have been called.
// require('electron').remote.componentUpdater.checkNow(extensionId) // NOLINT

// 1Password
// Download: https://clients2.google.com/service/update2/crx?response=redirect&prodversion=52.0.2743.116&x=id%3Daomjjhallfgjeglblehebfpbcfeobpgk%26uc // NOLINT
const uint8_t kOnePasswordPublicKey[162] = {
  0x30, 0x81, 0x9f, 0x30, 0x0d, 0x06, 0x09, 0x2a,
  0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01,
  0x05, 0x00, 0x03, 0x81, 0x8d, 0x00, 0x30, 0x81,
  0x89, 0x02, 0x81, 0x81, 0x00, 0x81, 0xe0, 0xc7,
  0xf4, 0xc5, 0x60, 0xea, 0xb2, 0xda, 0x6d, 0x66,
  0x1e, 0xe0, 0xaa, 0x87, 0x07, 0x2f, 0xe4, 0x53,
  0xdf, 0xa6, 0x49, 0xa3, 0xf8, 0x89, 0xd2, 0x46,
  0x66, 0x2f, 0x20, 0xbc, 0xbf, 0x10, 0xac, 0x19,
  0x2d, 0xba, 0x2e, 0x88, 0x9d, 0xb7, 0xaf, 0x4a,
  0x3c, 0x15, 0x65, 0x7e, 0xe0, 0x48, 0xd0, 0x56,
  0x96, 0x2f, 0x6e, 0x4d, 0x54, 0x1d, 0xac, 0x55,
  0xd8, 0xfb, 0xc0, 0xdb, 0x02, 0xbd, 0x02, 0x27,
  0xec, 0x89, 0x90, 0xc1, 0x20, 0x79, 0x02, 0xe7,
  0x6a, 0xd8, 0x1d, 0xee, 0x43, 0x39, 0x3b, 0xd1,
  0x10, 0x3b, 0x4a, 0x61, 0x84, 0xf6, 0x77, 0x48,
  0x2a, 0xc2, 0xac, 0xe0, 0xbd, 0x7d, 0x9f, 0xc6,
  0xaf, 0x86, 0x0e, 0x28, 0x85, 0xe8, 0xf2, 0x06,
  0x22, 0x39, 0x9e, 0xb5, 0x1e, 0x82, 0xcf, 0x78,
  0x8b, 0x4b, 0x4c, 0xa4, 0x55, 0x5e, 0x79, 0xd9,
  0x93, 0x38, 0xee, 0x3e, 0x79, 0x02, 0x03, 0x01,
  0x00, 0x01
};
const std::string kOnePasswordPublicKeyStr(  // NOLINT
    (const char *)kOnePasswordPublicKey, sizeof(kOnePasswordPublicKey));
const std::string kOnePasswordId("aomjjhallfgjeglblehebfpbcfeobpgk");  // NOLINT

// PDFJS
// Parent repo: https://github.com/diracdeltas/pdf.js
// Run: gulp run chromium
// Use Chromium to package build/chormium with the brave private key for pdfjs.
// We maintain our own private key, ask bcrypt or bbondy.
const uint8_t kPDFJSPublicKey[294] = {
  0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09,
  0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01,
  0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00,
  0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01,
  0x00, 0xaa, 0x6a, 0xa1, 0xe8, 0xac, 0x66, 0x8f,
  0x4d, 0x08, 0x8c, 0xab, 0xe3, 0x3e, 0xc0, 0xad,
  0xc3, 0xa8, 0x36, 0x04, 0x7b, 0xca, 0x8a, 0x98,
  0xd2, 0xdd, 0xf0, 0x43, 0xd0, 0x82, 0x27, 0x5d,
  0x96, 0x79, 0xee, 0xee, 0x68, 0x65, 0xfc, 0x3a,
  0xab, 0x8d, 0x8b, 0xee, 0xd8, 0x16, 0x0c, 0xba,
  0xcd, 0x0c, 0xfb, 0xee, 0xdd, 0x70, 0xc7, 0xd2,
  0xfa, 0x44, 0x0a, 0xbf, 0x88, 0x72, 0x00, 0x63,
  0x90, 0xcf, 0xb0, 0xeb, 0xed, 0x95, 0x75, 0x3c,
  0x8f, 0x8f, 0x9b, 0x9b, 0x9e, 0x04, 0xf0, 0xbc,
  0x1a, 0x82, 0x20, 0xf2, 0x2d, 0x7a, 0xda, 0x6c,
  0x64, 0xd2, 0x4e, 0x25, 0xfa, 0xc5, 0xc3, 0x43,
  0x88, 0x82, 0x6c, 0x9e, 0x91, 0x96, 0x2c, 0x23,
  0xe0, 0x6c, 0x2b, 0xbc, 0x22, 0x32, 0xd1, 0xdc,
  0xcf, 0x07, 0xca, 0x49, 0x38, 0xb4, 0x24, 0xa8,
  0x2b, 0xc0, 0x84, 0x61, 0x1d, 0xb1, 0x21, 0xa5,
  0x49, 0xc2, 0xc4, 0x58, 0x62, 0xfb, 0x32, 0x3a,
  0xd6, 0x9f, 0x63, 0xc0, 0xc6, 0xf6, 0x10, 0x11,
  0x70, 0xc6, 0xbb, 0xbb, 0x32, 0xda, 0x4f, 0xdb,
  0x58, 0xc6, 0xee, 0x95, 0x73, 0x9c, 0x57, 0x8b,
  0x57, 0xd5, 0xbd, 0x06, 0x43, 0x4b, 0xd5, 0x38,
  0x7d, 0x40, 0x1b, 0xd5, 0xb3, 0xb1, 0xaf, 0x67,
  0x0b, 0x48, 0x20, 0x89, 0xe2, 0x42, 0x42, 0xad,
  0xa9, 0x3d, 0x70, 0xa7, 0x82, 0x18, 0xf7, 0xf9,
  0x83, 0x78, 0xce, 0x52, 0x82, 0x08, 0x0a, 0x6a,
  0x4b, 0xa6, 0x0a, 0x74, 0xfd, 0x0f, 0x7e, 0xd9,
  0xc4, 0x39, 0xcc, 0xd8, 0xad, 0x77, 0x04, 0xa0,
  0x17, 0x3a, 0x47, 0x87, 0xe8, 0x92, 0xc6, 0xad,
  0x90, 0xa5, 0xdd, 0xa5, 0xe6, 0xa8, 0x33, 0xbd,
  0x3a, 0x12, 0xf0, 0xa1, 0xc8, 0x7e, 0x2c, 0x66,
  0xf9, 0x21, 0xa5, 0xf0, 0x39, 0x9c, 0x86, 0x9e,
  0x17, 0x61, 0x9b, 0xd3, 0x0d, 0x03, 0x78, 0x60,
  0x13, 0x02, 0x03, 0x01, 0x00, 0x01
};
const std::string kPDFJSPublicKeyStr(  // NOLINT
    (const char *)kPDFJSPublicKey, sizeof(kPDFJSPublicKey));
const std::string kPDFJSId("jdbefljfgobbmcidnmpjamcbhnbphjnb");  // NOLINT

// Dashlane
// Download: https://clients2.google.com/service/update2/crx?response=redirect&prodversion=52.0.2743.116&x=id%3Dfdjamakpfbbddfjaooikfcpapjohcfmg%26uc // NOLINT
const uint8_t kDashlanePublicKey[294] = {
  0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09,
  0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01,
  0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00,
  0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01,
  0x00, 0xad, 0xff, 0x8c, 0x6f, 0x4a, 0xe8, 0xe3,
  0x56, 0xc9, 0xf8, 0x55, 0x11, 0x22, 0x1a, 0x7b,
  0x62, 0x1c, 0x13, 0xc9, 0xa3, 0xf5, 0x51, 0xb2,
  0x58, 0xda, 0x93, 0x00, 0xa5, 0x81, 0x53, 0x9e,
  0x5d, 0x45, 0xfb, 0xe6, 0xd6, 0xeb, 0x96, 0x5f,
  0xf3, 0x4a, 0x70, 0x21, 0x11, 0x6d, 0xe1, 0xbe,
  0x95, 0x51, 0x0e, 0xea, 0xb7, 0x79, 0x0d, 0x13,
  0x75, 0xd6, 0xac, 0xde, 0x55, 0x52, 0x96, 0xce,
  0xe6, 0x96, 0xac, 0x41, 0x92, 0xe4, 0xe1, 0xcc,
  0xda, 0x10, 0x9c, 0xc5, 0x04, 0x63, 0xec, 0xc4,
  0x57, 0xde, 0xf3, 0xd8, 0x2e, 0x5d, 0xbd, 0x97,
  0x77, 0xa0, 0x86, 0x00, 0x7a, 0x5f, 0x76, 0x7f,
  0xb0, 0x3c, 0x85, 0x3c, 0x84, 0xc8, 0x9e, 0xd1,
  0xa8, 0xe8, 0x52, 0xa2, 0x02, 0xf9, 0x85, 0xa3,
  0x11, 0x92, 0x74, 0xbd, 0xfd, 0xe5, 0x3f, 0x4a,
  0xfd, 0x12, 0x91, 0x1b, 0x3d, 0x44, 0x82, 0x76,
  0x0d, 0x52, 0x8e, 0xf2, 0xdb, 0xfc, 0xdc, 0xcd,
  0xce, 0xad, 0xa1, 0xfc, 0x47, 0xaf, 0xfc, 0x17,
  0xdc, 0xac, 0x46, 0x7b, 0x7b, 0x7c, 0x04, 0x6f,
  0xd3, 0x60, 0x33, 0x6f, 0xe9, 0x74, 0xfd, 0xad,
  0x7e, 0x8c, 0x26, 0x06, 0x0e, 0xb1, 0x2e, 0xea,
  0x22, 0x53, 0x3d, 0x93, 0x69, 0x06, 0xd3, 0x56,
  0x80, 0x51, 0x82, 0x69, 0x29, 0x8a, 0x4d, 0xe0,
  0xcb, 0x82, 0xa8, 0x8c, 0x56, 0x87, 0x81, 0xd8,
  0x9d, 0x4f, 0xb0, 0x15, 0x18, 0x8a, 0x66, 0x1d,
  0x9c, 0x9c, 0x11, 0xde, 0x3d, 0xd4, 0x4f, 0x4c,
  0x1b, 0xf9, 0x87, 0xb9, 0x0d, 0x27, 0x59, 0x90,
  0xfd, 0xa4, 0x93, 0xa9, 0xf6, 0x7d, 0x5d, 0x04,
  0x70, 0x38, 0x2c, 0x0a, 0xb9, 0x5b, 0x15, 0x3a,
  0x7f, 0xf2, 0xbe, 0x87, 0xea, 0xa1, 0x7a, 0x45,
  0x8e, 0xec, 0xa5, 0x4a, 0xd0, 0xcd, 0xff, 0x9b,
  0x0c, 0x71, 0x1a, 0x18, 0xb3, 0x3d, 0xb8, 0xe9,
  0x25, 0x02, 0x03, 0x01, 0x00, 0x01
};
const std::string kDashlanePublicKeyStr(  // NOLINT
    (const char *)kDashlanePublicKey, sizeof(kDashlanePublicKey));
const std::string kDashlaneId("fdjamakpfbbddfjaooikfcpapjohcfmg");  // NOLINT

// LastPass
// Download: https://clients2.google.com/service/update2/crx?response=redirect&prodversion=52.0.2743.116&x=id%3Dhdokiejnpimakedhajhdlcegeplioahd%26uc // NOLINT
const uint8_t kLastPassPublicKey[162] = {
  0x30, 0x81, 0x9f, 0x30, 0x0d, 0x06, 0x09, 0x2a,
  0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01,
  0x05, 0x00, 0x03, 0x81, 0x8d, 0x00, 0x30, 0x81,
  0x89, 0x02, 0x81, 0x81, 0x00, 0xa2, 0x2f, 0xdc,
  0xb6, 0x8f, 0x38, 0x8a, 0xa7, 0x99, 0x23, 0x6f,
  0x5d, 0xee, 0x60, 0x6d, 0x5b, 0x01, 0x7b, 0x2e,
  0x7a, 0x65, 0x0a, 0x01, 0x85, 0x00, 0xc1, 0x1f,
  0xcd, 0xf6, 0xa4, 0xee, 0x84, 0xc2, 0x2e, 0x97,
  0x2d, 0x36, 0x11, 0xc9, 0xba, 0xdd, 0xd3, 0xa4,
  0x9f, 0xe3, 0x36, 0xaf, 0x6e, 0x88, 0x19, 0xf0,
  0xc4, 0xfe, 0x56, 0xcf, 0xbf, 0xf7, 0x41, 0xfd,
  0x6f, 0x9d, 0xdf, 0x8a, 0x6a, 0x1a, 0x8e, 0x6e,
  0x24, 0x96, 0x3e, 0x3a, 0x6b, 0x7d, 0xb7, 0x7c,
  0x6c, 0x22, 0xec, 0xfb, 0x99, 0x0c, 0x2e, 0xbc,
  0x5d, 0x47, 0xe6, 0x8c, 0xe3, 0xd0, 0xe1, 0xe8,
  0x93, 0x95, 0xc3, 0x15, 0x16, 0x81, 0x21, 0xf3,
  0xda, 0xd3, 0xa4, 0x61, 0x43, 0x0d, 0xcc, 0xee,
  0xc4, 0x99, 0x26, 0xf4, 0x3e, 0xaa, 0xa0, 0xf7,
  0xf9, 0xda, 0xf4, 0x68, 0xb5, 0xfe, 0x9a, 0xf8,
  0xb4, 0x2d, 0x0d, 0x75, 0xb9, 0x02, 0x03, 0x01,
  0x00, 0x01
};
const std::string kLastPassPublicKeyStr(  // NOLINT
    (const char *)kLastPassPublicKey, sizeof(kLastPassPublicKey));
const std::string kLastPassId("hdokiejnpimakedhajhdlcegeplioahd");  // NOLINT

// CRX hash. The extension id is: oimompecagnajdejgnnjijobebaeigek.
// Widevine
const uint8_t kWidevinePublicKey[162] = {
  0x30, 0x81, 0x9f, 0x30, 0x0d, 0x06, 0x09, 0x2a,
  0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01,
  0x05, 0x00, 0x03, 0x81, 0x8d, 0x00, 0x30, 0x81,
  0x89, 0x02, 0x81, 0x81, 0x00, 0xa6, 0x85, 0xef,
  0xb4, 0xd9, 0xc2, 0xcf, 0x3c, 0x05, 0x62, 0x69,
  0xeb, 0xe4, 0xfd, 0xfc, 0xce, 0x0c, 0xa5, 0x27,
  0x6f, 0xfc, 0xac, 0x68, 0x07, 0x83, 0xf2, 0x5a,
  0x44, 0xf6, 0x9c, 0x22, 0xad, 0x5e, 0x86, 0x60,
  0xe9, 0xbe, 0x9d, 0xa4, 0xe8, 0xef, 0x13, 0xce,
  0x0a, 0x1f, 0x2e, 0x8d, 0xc4, 0x7a, 0x47, 0x28,
  0xb5, 0x9c, 0xf4, 0xea, 0xd8, 0x64, 0xc6, 0xd0,
  0x2c, 0xaa, 0x74, 0x3c, 0x8e, 0xb1, 0x9d, 0x5a,
  0x44, 0xbb, 0x8c, 0x67, 0x94, 0x2a, 0x5f, 0x77,
  0x49, 0xf6, 0x35, 0xe4, 0x95, 0x2d, 0x0b, 0xa8,
  0x67, 0xe8, 0xb2, 0x82, 0x29, 0x19, 0xec, 0x5f,
  0xc2, 0x08, 0x1b, 0x88, 0xbb, 0xd0, 0x3a, 0x8f,
  0x50, 0xf8, 0x85, 0x93, 0xac, 0x03, 0xba, 0xdb,
  0x42, 0x80, 0xcd, 0x85, 0x34, 0x53, 0xa3, 0x15,
  0xdb, 0xbd, 0x93, 0x24, 0xb4, 0xa6, 0x64, 0xf5,
  0x04, 0x15, 0x8e, 0x88, 0x19, 0x02, 0x03, 0x01,
  0x00, 0x01
};
const std::string kWidevinePublicKeyStr(  // NOLINT
    (const char *)kWidevinePublicKey, sizeof(kWidevinePublicKey));
const std::string kWidevineId("oimompecagnajdejgnnjijobebaeigek");  // NOLINT

// Pocket
// Download: https://clients2.google.com/service/update2/crx?response=redirect&prodversion=52.0.2743.116&x=id%3Dniloccemoadcdkdjlinkgdfekeahmflj%26uc // NOLINT
const uint8_t kPocketPublicKey[162] = {
  0x30, 0x81, 0x9f, 0x30, 0x0d, 0x06, 0x09, 0x2a,
  0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01,
  0x05, 0x00, 0x03, 0x81, 0x8d, 0x00, 0x30, 0x81,
  0x89, 0x02, 0x81, 0x81, 0x00, 0xca, 0x09, 0x0c,
  0x01, 0x8a, 0xc2, 0xb5, 0x51, 0xcc, 0x58, 0x32,
  0x7e, 0x8c, 0x01, 0xf0, 0xdb, 0x73, 0xcc, 0x97,
  0x5b, 0x3b, 0xdb, 0x9c, 0x2c, 0xea, 0x27, 0x08,
  0xf0, 0x6d, 0xe3, 0x1a, 0x00, 0x78, 0xe2, 0xf7,
  0x58, 0xdd, 0x0b, 0x2d, 0xdb, 0x13, 0x33, 0x29,
  0xad, 0x36, 0x71, 0x5b, 0xfd, 0x40, 0x9d, 0xf9,
  0x3d, 0x07, 0x83, 0xfe, 0x85, 0xca, 0x13, 0xc2,
  0xa5, 0x1a, 0x31, 0x40, 0x78, 0x59, 0xe9, 0x90,
  0x31, 0x12, 0x91, 0xb2, 0xbf, 0x6f, 0x0b, 0x8e,
  0x55, 0xd6, 0x2b, 0xfd, 0xd7, 0x69, 0xea, 0xc8,
  0x69, 0x28, 0x19, 0x3f, 0x9c, 0x44, 0xa6, 0x5c,
  0xfa, 0x78, 0x81, 0xae, 0x20, 0x27, 0x9f, 0x82,
  0x76, 0x18, 0x10, 0x02, 0x1c, 0x9a, 0xa4, 0x90,
  0x28, 0x92, 0x0a, 0x1a, 0x61, 0x0c, 0x5b, 0x7f,
  0x50, 0xda, 0x10, 0x10, 0xac, 0xf8, 0x56, 0x8a,
  0x96, 0x64, 0x35, 0x63, 0xfd, 0x02, 0x03, 0x01,
  0x00, 0x01
};
const std::string kPocketPublicKeyStr(  // NOLINT
    (const char *)kPocketPublicKey, sizeof(kPocketPublicKey));
const std::string kPocketId("niloccemoadcdkdjlinkgdfekeahmflj");  // NOLINT

// Vimium
// Download: https://clients2.google.com/service/update2/crx?response=redirect&prodversion=52.0.2743.116&x=id%3Ddbepggeogbaibhgnhhndojpepiihcmeb%26uc // NOLINT
const uint8_t kVimiumPublicKey[162] = {
  0x30, 0x81, 0x9f, 0x30, 0x0d, 0x06, 0x09, 0x2a,
  0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01,
  0x05, 0x00, 0x03, 0x81, 0x8d, 0x00, 0x30, 0x81,
  0x89, 0x02, 0x81, 0x81, 0x00, 0x9a, 0xbe, 0x2c,
  0xc2, 0x67, 0xd1, 0x27, 0x04, 0x66, 0xed, 0x71,
  0x19, 0x8c, 0x12, 0xb7, 0x1a, 0xc4, 0x3d, 0x96,
  0x50, 0x72, 0x7d, 0x30, 0x4f, 0x08, 0x60, 0x64,
  0x21, 0x50, 0x19, 0x45, 0x80, 0x8b, 0xdc, 0x84,
  0x98, 0xc0, 0x3b, 0xc9, 0x28, 0xc9, 0xa9, 0x37,
  0x00, 0xcf, 0x79, 0x76, 0xab, 0xb7, 0xb0, 0xe2,
  0xdd, 0xb4, 0x86, 0x03, 0xfb, 0xbe, 0x53, 0xf3,
  0x65, 0x75, 0x5a, 0x5e, 0x5f, 0x2e, 0x71, 0xc0,
  0x7a, 0x28, 0xf6, 0xfc, 0x85, 0x8b, 0xd9, 0x55,
  0x62, 0x4c, 0x77, 0x99, 0x85, 0x76, 0x65, 0xd7,
  0xea, 0xc3, 0xf6, 0xc4, 0x43, 0x68, 0x46, 0x1d,
  0xed, 0xa6, 0x5e, 0xb6, 0x92, 0x76, 0xf7, 0xe5,
  0xd7, 0x7e, 0x15, 0x69, 0x84, 0xa0, 0x2b, 0x08,
  0x27, 0xf0, 0x6d, 0x80, 0xad, 0xa0, 0x98, 0x53,
  0x22, 0xbe, 0x92, 0xe8, 0x36, 0x2c, 0x5e, 0xe4,
  0x5e, 0xbe, 0x85, 0x74, 0x13, 0x02, 0x03, 0x01,
  0x00, 0x01
};
const std::string kVimiumPublicKeyStr(  // NOLINT
    (const char *)kVimiumPublicKey, sizeof(kVimiumPublicKey));
const std::string kVimiumId("dbepggeogbaibhgnhhndojpepiihcmeb");  // NOLINT

// Enpass
// Download: https://clients2.google.com/service/update2/crx?response=redirect&prodversion=52.0.2743.116&x=id%3Dkmcfomidfpdkfieipokbalgegidffkal%26uc // NOLINT
const uint8_t kEnpassPublicKey[294] = {
  0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09,
  0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01,
  0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00,
  0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01,
  0x00, 0x84, 0x5a, 0x00, 0x2a, 0xd3, 0x8e, 0x3d,
  0x8d, 0x17, 0xdd, 0x1e, 0x2c, 0xa1, 0xad, 0xab,
  0xf3, 0x1d, 0xc6, 0xcb, 0xf9, 0xf6, 0xdd, 0x70,
  0xbf, 0x0e, 0x7f, 0xa2, 0x4c, 0x02, 0x91, 0xd4,
  0xfd, 0x6d, 0x5a, 0x0a, 0x78, 0xa6, 0x67, 0xf5,
  0x27, 0x59, 0x74, 0x8c, 0x8d, 0xeb, 0x60, 0x68,
  0x95, 0x73, 0x90, 0x13, 0x95, 0xac, 0x30, 0x0a,
  0x05, 0x69, 0xe5, 0x9d, 0x65, 0xd4, 0xf5, 0x40,
  0x11, 0xd2, 0xa6, 0x0e, 0xd1, 0xd0, 0x8d, 0xb1,
  0xeb, 0xe4, 0x7c, 0x1b, 0xe9, 0x6f, 0x3a, 0xc7,
  0x05, 0xb3, 0xfa, 0xbb, 0xb6, 0xba, 0xcc, 0x55,
  0x30, 0x77, 0x1f, 0x42, 0x55, 0x09, 0x74, 0x53,
  0xca, 0xbb, 0x15, 0x5a, 0x96, 0x49, 0xc2, 0xe1,
  0x5d, 0xd7, 0x6b, 0x25, 0x3d, 0x70, 0x7f, 0xbf,
  0x9a, 0x8d, 0x51, 0x09, 0x20, 0x1f, 0x4c, 0x22,
  0x96, 0x82, 0xa0, 0x80, 0xd9, 0xe7, 0xf1, 0x2b,
  0x9d, 0xbe, 0x16, 0xc4, 0xad, 0xc2, 0x34, 0x7d,
  0xfe, 0xa8, 0xd4, 0x9d, 0x52, 0x4e, 0x1a, 0xa4,
  0xb4, 0x11, 0x09, 0xa1, 0x21, 0xfc, 0x21, 0x74,
  0x33, 0x29, 0x79, 0xad, 0x17, 0x67, 0xae, 0xc5,
  0x91, 0x32, 0x5b, 0x45, 0xbe, 0xf0, 0xb4, 0x2e,
  0x8c, 0x8c, 0x80, 0x44, 0x71, 0x62, 0xaf, 0x3f,
  0x3b, 0x69, 0x81, 0xef, 0xef, 0x32, 0x8c, 0xa1,
  0x88, 0xb8, 0xd3, 0x72, 0x4a, 0xb9, 0x90, 0xa0,
  0x5b, 0x80, 0x43, 0x4e, 0xb9, 0x97, 0xbb, 0x3e,
  0xfc, 0xa6, 0xc1, 0x6c, 0x43, 0xd0, 0x9d, 0x19,
  0x55, 0xf0, 0xc4, 0xe9, 0x53, 0x50, 0x69, 0x5e,
  0xcf, 0x91, 0xbc, 0x7d, 0xc1, 0xea, 0xed, 0x78,
  0x7c, 0xe8, 0x01, 0x87, 0x52, 0x5d, 0xd8, 0xf9,
  0x30, 0xa2, 0x21, 0x2f, 0x4d, 0xbd, 0xff, 0x35,
  0x67, 0xdc, 0x1a, 0x42, 0x92, 0x91, 0x19, 0x06,
  0xbf, 0x8c, 0xd9, 0x95, 0xd7, 0xa2, 0xd1, 0x00,
  0x8b, 0x02, 0x03, 0x01, 0x00, 0x01
};
const std::string kEnpassPublicKeyStr(  // NOLINT
    (const char *)kEnpassPublicKey, sizeof(kEnpassPublicKey));
const std::string kEnpassId("kmcfomidfpdkfieipokbalgegidffkal");  // NOLINT

// bitwarden
// Download: https://clients2.google.com/service/update2/crx?response=redirect&prodversion=52.0.2743.116&x=id%3Dnngceckbapebfimnlniiiahkandclblb%26uc // NOLINT
const uint8_t kBitwardenPublicKey[294] = {
  0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09,
  0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01,
  0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00,
  0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01,
  0x00, 0x9a, 0xa2, 0x9b, 0xbe, 0xb7, 0xac, 0x87,
  0x25, 0xd1, 0xb8, 0xdd, 0xa0, 0x8a, 0x47, 0x91,
  0xd6, 0x27, 0x6a, 0x47, 0xa2, 0x8b, 0xd0, 0x38,
  0xbc, 0xf4, 0x96, 0x5c, 0x33, 0x20, 0xf8, 0x6e,
  0x32, 0x51, 0x65, 0x59, 0x90, 0x3b, 0xb6, 0xb3,
  0x9d, 0x21, 0x92, 0x00, 0xb2, 0x07, 0xcd, 0x20,
  0x14, 0x19, 0x8a, 0x1c, 0x51, 0x80, 0x4d, 0x0c,
  0xe3, 0xf9, 0x40, 0x08, 0x48, 0x9b, 0x15, 0xf2,
  0x43, 0x5a, 0x86, 0xf3, 0xe8, 0x28, 0x5e, 0xcf,
  0x77, 0xbf, 0xd1, 0xb3, 0xac, 0xd2, 0x44, 0x4d,
  0xd5, 0x6e, 0x08, 0x48, 0x6a, 0x06, 0x08, 0x02,
  0xe3, 0xf0, 0xc5, 0x69, 0xba, 0xf2, 0x25, 0x90,
  0xe2, 0x2a, 0xf6, 0x76, 0x26, 0x5d, 0x03, 0x33,
  0xb3, 0x2c, 0x59, 0xda, 0x32, 0x6d, 0x93, 0xf0,
  0xae, 0x3e, 0xf4, 0x57, 0x76, 0x89, 0xfe, 0x75,
  0x4d, 0x38, 0xc9, 0x1f, 0xf3, 0xaf, 0x2c, 0x70,
  0xd4, 0xcc, 0x96, 0x2c, 0x22, 0xb4, 0x2a, 0xaa,
  0x8d, 0x3e, 0x5b, 0x69, 0x30, 0x0d, 0xb0, 0x6d,
  0x03, 0x91, 0x95, 0x90, 0x13, 0x10, 0xf8, 0x95,
  0x25, 0xf3, 0x49, 0x91, 0xc7, 0xf4, 0xc1, 0x0e,
  0xf2, 0xad, 0x22, 0x67, 0xb4, 0x51, 0x94, 0xdb,
  0x86, 0x44, 0x10, 0x24, 0x66, 0x03, 0x55, 0xf0,
  0x5c, 0x19, 0x46, 0xc3, 0xca, 0x9b, 0xfa, 0xf0,
  0x43, 0xd7, 0x72, 0xdd, 0x5a, 0x60, 0x2d, 0xc9,
  0x8b, 0xa7, 0x91, 0xa2, 0x32, 0xdf, 0xa4, 0x00,
  0x49, 0xdc, 0xa8, 0xa0, 0x24, 0xb9, 0x16, 0x27,
  0x85, 0x55, 0xd7, 0x06, 0xc2, 0xaa, 0x23, 0x26,
  0x13, 0x32, 0x31, 0xd2, 0x2e, 0x42, 0xe7, 0xa5,
  0xf1, 0x72, 0x4b, 0x23, 0x8f, 0x2c, 0x17, 0x52,
  0xeb, 0x5e, 0xe2, 0xfc, 0xf1, 0x8d, 0x88, 0xff,
  0xcc, 0x4f, 0xa5, 0xf2, 0xeb, 0x3f, 0xff, 0xbf,
  0x93, 0x68, 0xcd, 0x48, 0x1a, 0x01, 0x9e, 0x20,
  0x25, 0x02, 0x03, 0x01, 0x00, 0x01
};
const std::string kBitwardenPublicKeyStr(  // NOLINT
    (const char *)kBitwardenPublicKey, sizeof(kBitwardenPublicKey));
const std::string kBitwardenId("nngceckbapebfimnlniiiahkandclblb");  // NOLINT

// Honey
// Download: https://clients2.google.com/service/update2/crx?response=redirect&prodversion=52.0.2743.116&x=id%3Dbmnlcjabgnpnenekpadlanbbkooimhnj%26uc // NOLINT
const uint8_t kHoneyPublicKey[162] = {
  0x30, 0x81, 0x9f, 0x30, 0x0d, 0x06, 0x09, 0x2a,
  0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01,
  0x05, 0x00, 0x03, 0x81, 0x8d, 0x00, 0x30, 0x81,
  0x89, 0x02, 0x81, 0x81, 0x00, 0xbb, 0xf6, 0x66,
  0xb2, 0x2f, 0x2b, 0x82, 0x61, 0x8f, 0xdd, 0xc9,
  0x3e, 0xd8, 0x72, 0xbd, 0x6c, 0x54, 0x1a, 0x7d,
  0xc8, 0x7a, 0xd8, 0xe2, 0x69, 0xe8, 0x81, 0x51,
  0x20, 0xbb, 0xeb, 0x03, 0x4f, 0xaf, 0xbf, 0x03,
  0x5d, 0xb5, 0x35, 0xaf, 0x9a, 0x4f, 0x0e, 0xa6,
  0x14, 0xb0, 0xfa, 0x2c, 0x78, 0x1b, 0x80, 0x7b,
  0x78, 0x7e, 0x74, 0x36, 0x57, 0xf4, 0x30, 0x71,
  0xf0, 0x52, 0x5d, 0x14, 0xd2, 0x90, 0x6a, 0x60,
  0x36, 0xc6, 0x40, 0x8e, 0x76, 0x2c, 0xe3, 0xf5,
  0xf3, 0x65, 0x06, 0x0a, 0x1a, 0x5b, 0x56, 0x4f,
  0xdd, 0xc4, 0x3f, 0xdc, 0xd7, 0x37, 0x59, 0x06,
  0x6e, 0xdc, 0xdf, 0x90, 0xf1, 0xb3, 0x4d, 0xa9,
  0x2a, 0xb8, 0x27, 0xce, 0x8d, 0xb2, 0xad, 0x6c,
  0x04, 0x0a, 0x5a, 0x1f, 0x29, 0xa7, 0x3a, 0x8b,
  0x85, 0x67, 0x11, 0x52, 0x7f, 0x60, 0xfc, 0xf8,
  0x54, 0xf7, 0xd1, 0x76, 0xf5, 0x02, 0x03, 0x01,
  0x00, 0x01
};

const std::string kHoneyPublicKeyStr(  // NOLINT
    (const char *)kHoneyPublicKey, sizeof(kHoneyPublicKey));
const std::string kHoneyId("bmnlcjabgnpnenekpadlanbbkooimhnj");  // NOLINT

// Pinterest
// Download: https://clients2.google.com/service/update2/crx?response=redirect&prodversion=52.0.2743.116&x=id%3Dgpdjojdkbbmdfjfahjcgigfpmkopogic%26uc // NOLINT
const uint8_t kPinterestPublicKey[162] = {
  0x30, 0x81, 0x9f, 0x30, 0x0d, 0x06, 0x09, 0x2a,
  0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01,
  0x05, 0x00, 0x03, 0x81, 0x8d, 0x00, 0x30, 0x81,
  0x89, 0x02, 0x81, 0x81, 0x00, 0xc1, 0xf7, 0x9a,
  0xb6, 0x87, 0x2b, 0x78, 0xf5, 0x90, 0xee, 0x56,
  0x76, 0x08, 0xf7, 0x55, 0xda, 0x66, 0x1a, 0x90,
  0x91, 0xb5, 0xee, 0xd1, 0x7d, 0xdf, 0xce, 0x83,
  0x71, 0x3f, 0x18, 0x45, 0x6d, 0xfa, 0x86, 0x2b,
  0x0b, 0x6d, 0xb3, 0xdd, 0x0b, 0x27, 0xb9, 0x43,
  0xe4, 0x30, 0x88, 0x7e, 0x70, 0x60, 0xf1, 0x61,
  0x85, 0x86, 0x9d, 0xde, 0x5b, 0x81, 0xb1, 0x3a,
  0x09, 0x40, 0x2a, 0xb9, 0xe4, 0xb2, 0x62, 0x68,
  0xc8, 0x00, 0xf9, 0x3e, 0x74, 0x80, 0xb9, 0xfc,
  0x7c, 0x7c, 0x3d, 0xed, 0xad, 0x9b, 0xe8, 0xfd,
  0x90, 0x2a, 0x17, 0x1d, 0x71, 0xe5, 0x79, 0xb7,
  0x46, 0x6d, 0xf8, 0x12, 0x0b, 0xd5, 0x5d, 0xda,
  0xda, 0x96, 0x01, 0xd2, 0x62, 0x2a, 0x9c, 0x11,
  0x4f, 0xc5, 0x5f, 0x79, 0x18, 0x9c, 0xb2, 0xe1,
  0xaf, 0x64, 0xd2, 0xe2, 0x57, 0x2b, 0xb2, 0x7d,
  0x4a, 0x65, 0xdf, 0xe5, 0x71, 0x02, 0x03, 0x01,
  0x00, 0x01
};

const std::string kPinterestPublicKeyStr(  // NOLINT
    (const char *)kPinterestPublicKey, sizeof(kPinterestPublicKey));
const std::string kPinterestId("gpdjojdkbbmdfjfahjcgigfpmkopogic");  // NOLINT

#endif  // BRAVE_BROWSER_COMPONENT_UPDATER_DEFAULT_EXTENSIONS_H_
